name: 🚀 Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "20"
  NPM_CONFIG_CACHE: ~/.npm

jobs:
  setup:
    name: 🔧 Setup & Cache
    runs-on: ubuntu-latest
    outputs:
      npm-cache-hit: ${{ steps.npm-cache.outputs.cache-hit }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 💾 Cache npm dependencies
        id: npm-cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📥 Install dependencies
        run: npm ci --prefer-offline --no-audit

  lint:
    name: 🧹 Lint Code
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 📥 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🧹 Run ESLint
        run: npm run lint

      - name: 🎨 Check Prettier formatting
        run: npx prettier --check .

      - name: 📝 Lint Markdown
        run: npx markdownlint "**/*.md" --ignore node_modules

      - name: 🔍 Lint package.json
        run: npx npmPkgJsonLint .

  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        node-version: [18, 20, 22]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: 📥 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🧪 Run tests
        run: npm test

      - name: 📊 Upload coverage to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false

  validate:
    name: 🔍 Validate Data & Config
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 📥 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔍 Validate JSON schemas
        run: |
          if [ -d "data" ] && [ "$(ls -A data/*.json 2>/dev/null)" ]; then
            npm run validate:data || echo "Data validation skipped - no data files or validation script issues"
          else
            echo "No data directory or JSON files found - skipping validation"
          fi

      - name: ✅ Validate TypeScript config
        run: npx tsc --noEmit --skipLibCheck

      - name: 🔧 Validate ESLint config
        run: npx eslint --print-config src/index.js > /dev/null

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 📥 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔍 Run npm audit
        run: npm audit --audit-level moderate

      - name: 🔒 Run security scan
        run: npx audit-ci --moderate

  build:
    name: 🏗️ Build Project
    runs-on: ubuntu-latest
    needs: [lint, test, validate]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 📥 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🏗️ Build project
        run: npm run build

      - name: 📦 Archive build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            build/
          retention-days: 7

  summary:
    name: 📋 CI Summary
    runs-on: ubuntu-latest
    needs: [lint, test, validate, security]
    if: always()
    steps:
      - name: 📊 Check all jobs status
        run: |
          echo "## CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lint | ${{ needs.lint.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Test | ${{ needs.test.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Validate | ${{ needs.validate.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security | ${{ needs.security.result }} |" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.lint.result }}" == "failure" || "${{ needs.test.result }}" == "failure" || "${{ needs.validate.result }}" == "failure" || "${{ needs.security.result }}" == "failure" ]]; then
            echo "❌ CI Failed - Check the logs above" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "✅ All CI checks passed!" >> $GITHUB_STEP_SUMMARY
          fi
