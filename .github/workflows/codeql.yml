name: "CodeQL Sovereign Scan"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '39 8 * * 0'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
            build-mode: none
          - language: python
            build-mode: none
          - language: rust
            build-mode: none
          - language: c-cpp
            build-mode: none
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Language-specific setup & caching
      - name: Setup Node.js and cache npm
        if: ${{ matrix.language == 'javascript-typescript' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Setup Python and cache pip
        if: ${{ matrix.language == 'python' }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: pip

      - name: Setup Rust and cache cargo
        if: ${{ matrix.language == 'rust' }}
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Initializes the CodeQL tools for scanning
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          queries: +security-extended

      # Optional manual build step for compiled languages
      - name: Manual Build Step
        if: ${{ matrix.build-mode == 'manual' }}
        shell: bash
        run: |
          echo 'Manual build mode active. Insert your build commands here:'
          echo '  make bootstrap'
          echo '  make release'

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: ./codeql-results

      # Upload SARIF artifacts for archival & offline review
      - name: Upload CodeQL SARIF
        uses: actions/upload-artifact@v4
        with:
          name: codeql-sarif-${{ matrix.language }}
          path: ./codeql-results
